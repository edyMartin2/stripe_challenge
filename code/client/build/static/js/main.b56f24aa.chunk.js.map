{"version":3,"sources":["components/SRECard.js","components/EcoNavigation.js","components/Header.js","pages/Home.js","components/SREItem.js","components/Items.js","components/Thanks.js","components/PaymentForm.js","components/SummaryElement.js","components/SummaryTable.js","Services/video.js","pages/Videos.js","Services/concert.js","pages/Concert.js","components/SignupComplete.js","components/RegistrationForm.js","pages/Lessons.js","pages/ConcertSuccess.js","Services/account.js","components/UpdateCustomer.js","pages/AccountUpdate.js","components/App.js","i18n.js","serviceWorker.js","components/ErrorBoundary.js","index.js","components/mock_data.js","components/Util.js"],"names":["SRECard","props","id","title","desc","img","route","className","src","process","alt","to","EcoNav","links","map","link","key","name","replace","selected","url","Header","home","concert","videos","lessons","Home","SREItem","index","item","price","action","capitalize","ReactHtmlParser","onClick","getPriceDollars","Items","items","length","itemId","Thanks","state","window","location","reload","PaymentForm","active","type","placeholder","autoComplete","role","SummaryElement","rowClass","amountCents","SummaryTable","discountFactor","minItemsForDiscount","order","getSelectedItems","filter","computeSubTotal","reduce","item1","item2","computeDiscount","selectedItems","discount","subTotal","trim","videoSetup","a","fetch","method","headers","response","ok","console","log","json","data","Videos","useState","setData","setItems","orderData","setOrderData","useEffect","result","config","items_data","tempItems","i","Object","entries","push","setup","copyItems","concat","concertSetup","concertSuccess","Concert","tickets","setTickets","total","setTotal","t","useTranslation","basePrice","disabled","min","max","value","SignupComplete","email","last4","customer_id","RegistrationForm","details","hidden","months","formatSession","session","time","date","getDate","getMonth","Lessons","sessions","setSessions","setSelected","setDetails","Date","setDate","prev","toggleItem","ConcertSuccess","JSON","stringify","accountUpdate","UpdateCustomer","AccountUpdate","App","StrictMode","fallback","path","i18n","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","interpolation","escapeValue","Boolean","hostname","match","ErrorBoundary","hasError","error","errorInfo","this","children","Component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message","exports","video_discount_factor","video_min_items_for_discount","checkout_base_price","checkout_currency","checkout_event_name","checkout_image","decimal","recurringBy","undefined","pricePart","Math","round","toFixed","itemName","charAt","toUpperCase","slice"],"mappings":"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","file":"static/js/main.b56f24aa.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"@reach/router\";\n\n//Home item card\nconst SRECard = (props) => {\n  const { id, title, desc, img, route } = props;\n\n  return (\n    <div className=\"sr-item\">\n      <div className=\"eco-product-img\">\n        <img src={`${process.env.PUBLIC_URL}${img}`} alt=\"\" />\n      </div>\n      <div className=\"sr-item-text\">{title}</div>\n      <div className=\"eco-desc-text\">{desc}</div>\n      <Link to={route}>\n        <button id={id}>Take the challenge</button>\n      </Link>\n    </div>\n  );\n};\n\nexport default SRECard;\n","import React from \"react\";\nimport { Link } from \"@reach/router\";\n//Show Nav Menu\nconst EcoNav = ({ links }) => {\n  return (\n    <nav>\n      <div className=\"logo\">\n        <img src=\"/assets/img/logo.svg\" alt=\"logo music store\" />\n      </div>\n      <ul className={`eco-navigation`}>\n        {links.map((link) => (\n          <li key={link.name.replace(\" \", \"\")}>\n            {link.selected ? (\n              <Link to={link.url} className=\"current\">\n                {link.name}\n              </Link>\n            ) : (\n              <Link to={link.url}>{link.name}</Link>\n            )}\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nexport default EcoNav;\n","import React from \"react\";\nimport EcoNav from \"./EcoNavigation\";\n\nconst Header = ({ selected }) => {\n  const home = selected === \"home\";\n  const concert = selected === \"concert\";\n  const videos = selected === \"videos\";\n  const lessons = selected === \"lessons\";\n\n  return (\n    <div className=\"header\">\n      <EcoNav\n        links={[\n          { name: \"Home\", url: \"/\", selected: home },\n          { name: \"Concert Tickets\", url: \"/concert\", selected: concert },\n          { name: \"Video Courses\", url: \"/videos\", selected: videos },\n          { name: \"Lessons Courses\", url: \"/lessons\", selected: lessons },\n        ]}\n      />\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport SRECard from \"../components/SRECard\";\nimport \"../css/global.scss\";\nimport Header from \"../components/Header\";\n//Show home page\nconst Home = () => {\n  return (\n    <main className=\"main-global\">\n      <Header selected=\"home\" />\n\n      <div className=\"home-body\">\n        <div id=\"sr-items\" className=\"items\">\n          <SRECard\n            id=\"concert\"\n            title=\"Concert Tickets\"\n            desc=\"Build a global Checkout (server + client) integration to accept\n        online payments\"\n            img=\"/assets/img/concert.png\"\n            route=\"/concert\"\n          />\n          <SRECard\n            id=\"videos\"\n            title=\"Video Course\"\n            desc=\"Build a card payment integration using the Payment Intents API and Stripe Elements\"\n            img=\"/assets/img/freestocks-org-Fx5rrxSaUtI-unsplash.jpg\"\n            route=\"/videos\"\n          />\n          <SRECard\n            id=\"lessons\"\n            title=\"Music Lessons\"\n            desc=\"Build an off-session integration using the Setup Intents API and\n        Stripe Elements\"\n            img=\"/assets/img/LessonsHome.png\"\n            route=\"/lessons\"\n          />\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport { capitalize, getPriceDollars } from \"./Util\";\n\n//Generate HTML for video course\nconst SREItem = (props) => {\n  const { id, index, item, price, img, desc, action, selected } = props;\n\n  return (\n    <div className={`video-item ${selected ? \" selected\" : \"\"}`}>\n      <div className=\"video-img\">\n        <img src={img} alt={item} />\n      </div>\n\n      <div className=\"video-title-text\">{capitalize(item)}</div>\n\n      <div className=\"video-desc-text\">{ReactHtmlParser(desc)}</div>\n\n      <button\n        id={id}\n        className={`video-button ${selected ? \" selected\" : \"\"}`}\n        onClick={() => action(id, index)}\n      >\n        <span id=\"button-text\">{getPriceDollars(price)}</span>\n      </button>\n    </div>\n  );\n};\nexport default SREItem;\n","import React from \"react\";\nimport SREItem from \"./SREItem\";\n\n//Process each video course and generate html\nconst Items = (props) => {\n  const items = props.items;\n  const action = props.action;\n\n  return (\n    <div id=\"sr-items\" className=\"video-body\">\n      {items.length === 0 ? (\n        <h1>No items found {};</h1>\n      ) : (\n        items.map((item) => (\n          <SREItem\n            key={item.itemId}\n            id={item.itemId}\n            index={item.index}\n            item={item.title}\n            price={item.price}\n            img={item.img}\n            desc={item.desc}\n            action={action}\n            selected={item.selected}\n          />\n        ))\n      )}\n    </div>\n  );\n};\n\nexport default Items;\n","import React from \"react\";\n\nconst Thanks = ({ state }) => {\n  if (state) {\n    return (\n      <div className=\"sr-section completed-view video-thanks hidden\">\n        <div className=\"success\">\n          <img src=\"/assets/img/success.svg\" alt=\"\" />\n        </div>\n        <h3 id=\"order-status\">Thank you for your order!</h3>\n        <p>\n          Payment Id: <span id=\"payment-id\"></span>\n        </p>\n        <p>Please check your email for download instructions.</p>{\" \"}\n        <button onClick={() => window.location.reload(false)}>\n          Place Another Order\n        </button>\n      </div>\n    );\n  } else {\n    return \"\";\n  }\n};\n\nexport default Thanks;\n","import React from \"react\";\nimport Thanks from \"./Thanks\";\n\n//Payment Form, process user information to allow payment.\n\nconst PaymentForm = (props) => {\n  const { active } = props;\n  if (active) {\n    return (\n      <div>\n        <form id=\"payment-form\" className={`sr-payment-form payment-view`}>\n          <h3>Payment details</h3>\n          <div className=\"sr-form-row\">\n            <div className=\"sr-combo-inputs\">\n              <div className=\"sr-combo-inputs-row\">\n                <input\n                  type=\"text\"\n                  id=\"name\"\n                  placeholder=\"Name\"\n                  autoComplete=\"cardholder\"\n                  className=\"sr-input\"\n                />\n              </div>\n              <div className=\"sr-combo-inputs-row\">\n                <input\n                  type=\"text\"\n                  id=\"email\"\n                  placeholder=\"Email\"\n                  autoComplete=\"cardholder\"\n                />\n              </div>\n\n              <div className=\"sr-combo-inputs-row\">\n                <div\n                  id=\"card-element\"\n                  className=\"sr-input sr-card-element\"\n                ></div>\n              </div>\n            </div>\n            <div className=\"sr-field-error\" id=\"card-errors\" role=\"alert\"></div>\n          </div>\n          <button id=\"submit\">\n            <div className=\"spinner hidden\" id=\"spinner\"></div>\n            <span id=\"button-text hidden\">Purchase</span>\n          </button>\n          <div className=\"legal-text\">\n            Your card will be immediately charged\n          </div>\n        </form>\n        <Thanks state={false} />\n      </div>\n    );\n  } else {\n    return \"\";\n  }\n};\n\nexport default PaymentForm;\n","import React from \"react\";\nimport { capitalize, getPriceDollars } from \"./Util\";\n\nconst SummaryElement = ({ id, rowClass, desc, amountCents }) => {\n  return (\n    <div className=\"summary-row\">\n      <div id={id} className={`${rowClass} summary-title`}>\n        {capitalize(desc)}\n      </div>\n      <div className={`${rowClass} summary-price`}>\n        {getPriceDollars(amountCents)}\n      </div>\n    </div>\n  );\n};\n\nexport default SummaryElement;\n","import React from \"react\";\nimport PaymentForm from \"./PaymentForm\";\nimport SummaryElement from \"./SummaryElement\";\n\nconst SummaryTable = (props) => {\n  const { discountFactor, minItemsForDiscount, items, order } = props;\n\n  //Return array of selected items\n  var getSelectedItems = () => {\n    return items.filter((item) => item.selected);\n  };\n\n  //Calculate total before applying discount\n  var computeSubTotal = () => {\n    return getSelectedItems(items)\n      .map((item) => item.price)\n      .reduce((item1, item2) => item1 + item2, 0);\n  };\n\n  //Check if discount apply to order\n  var computeDiscountPercentage = () => {\n    return minItemsForDiscount <= order.length ? discountFactor : 0;\n  };\n  //Calculate total discount\n  var computeDiscount = () => {\n    return computeSubTotal() * computeDiscountPercentage();\n  };\n  //Calculate total after discount\n  var computeTotal = () => {\n    let subTotal = computeSubTotal();\n    let discount = computeDiscount();\n    return subTotal - discount;\n  };\n\n  const selectedItems = getSelectedItems();\n  const discount = computeDiscount();\n  const subTotal = computeSubTotal();\n  const active = order.length > 0;\n\n  if (active) {\n    return (\n      <div className=\"video-summary\">\n        <div className=\"summary-content\">\n          <h3>Purchase Summary</h3>\n          <div id=\"summary-preface\" className=\"sr-legal-text left\">\n            No courses selected.\n          </div>\n          <div id=\"summary-table\" className=\"summary-table\">\n            {selectedItems.map((item) => (\n              <SummaryElement\n                rowClass=\"summary-product\"\n                desc={item.title}\n                amountCents={item.price}\n                key={item.title.trim()}\n              />\n            ))}\n            {discount > 0 ? (\n              <SummaryElement\n                rowClass=\"summary-discount\"\n                desc=\"Discount\"\n                amountCents={discount}\n                key=\"discount\"\n              />\n            ) : (\n              \"\"\n            )}\n\n            {discount > 0 ? (\n              <SummaryElement\n                rowClass=\"summary-subtotal\"\n                desc=\"Subtotal\"\n                amountCents={subTotal}\n                key=\"subTotal\"\n              />\n            ) : (\n              \"\"\n            )}\n            <SummaryElement\n              rowClass=\"summary-total\"\n              desc=\"Total\"\n              amountCents={computeTotal()}\n              key=\"total\"\n            />\n          </div>\n        </div>\n        {\n          //Component to generate payment form\n        }\n        <PaymentForm active={active} />\n      </div>\n    );\n  } else {\n    return \"\";\n  }\n};\n\nexport default SummaryTable;\n","export const videoSetup = async (props) => {\n  const response = await fetch(\"/setup-video-page\", {\n    method: \"get\",\n    headers: { \"Content-Type\": \"application/json\" },\n  });\n  if (!response.ok) {\n    console.log(response);\n    console.log(\"Video Setup: Error happened while fetching data\");\n    return null;\n  }\n  const data = await response.json();\n  return data;\n};\n","import React, { useState, useEffect } from \"react\";\nimport Items from \"../components/Items\";\nimport SummaryTable from \"../components/SummaryTable\";\nimport { items_data, config } from \"../components/mock_data\";\nimport \"../css/global.scss\";\nimport { videoSetup } from \"../Services/video\";\nimport Header from \"../components/Header\";\nconst Videos = () => {\n  const [data, setData] = useState({});\n  const [items, setItems] = useState(null);\n  const [orderData, setOrderData] = useState([]);\n\n  //Get info to load page, config API route in package.json \"proxy\"\n  useEffect(() => {\n    const setup = async () => {\n      var result = await videoSetup();\n\n      if (result === null) {\n        //use static data\n        //comment this code to work with backend only\n        result = config;\n        result.items = items_data;\n      }\n      let tempItems = [];\n      let i = 0;\n      for (let [, item] of Object.entries(result.items)) {\n        item.index = i;\n        item.selected = false;\n        i += 1;\n        tempItems.push(item);\n      }\n      setItems(tempItems);\n      setData(result);\n    };\n    setup();\n  }, []);\n\n  //update order\n  var updateOrder = (id, index) => {\n    let copyItems = items;\n    //toggles selected items\n    if (!copyItems[index].selected) {\n      copyItems[index].selected = true;\n      //Add item to order\n      setOrderData(orderData.concat(id));\n    } else {\n      copyItems[index].selected = false;\n      //Retire item from order\n      setOrderData(orderData.filter((item) => item !== id));\n    }\n    setItems(copyItems);\n  };\n\n  if (items === null) {\n    return <h1>loading</h1>;\n  }\n  return (\n    <main className=\"main-global\">\n      <Header selected=\"videos\" />\n      <div className=\"video-title\" id=\"title\">\n        <h2>Video Courses</h2>\n      </div>\n\n      <div className=\"video-instructions\">\n        Not ready to commit to lessons? These short video courses are designed\n        to be fun, quickly teach you something, and let you get to know our\n        expert teachers. Once you purchase the course, we&apos;ll send you a\n        link to the video and you&apos;ll have access to it forever.\n      </div>\n      <div className=\"video-instructions\">\n        20% discount on purchases of two or more video courses! Discount\n        reflected in cart.\n      </div>\n\n      <div className=\"video-body\">\n        {\n          //Show video course\n        }\n        <Items items={items} action={updateOrder} />\n      </div>\n\n      {\n        //Show summary table of video selected and calculated the total and disccount\n      }\n      <SummaryTable\n        discountFactor={data.discountFactor}\n        minItemsForDiscount={data.minItemsForDiscount}\n        items={items}\n        order={orderData}\n      />\n    </main>\n  );\n};\n\nexport default Videos;\n","export const concertSetup = async (props) => {\n  const response = await fetch(\"/setup-concert-page\", {\n    method: \"get\",\n    headers: { \"Content-Type\": \"application/json\" },\n  });\n  if (!response.ok) {\n    console.log(response);\n    console.log(\"Concert Setup: Error happened while fetching data\");\n    return null;\n  }\n  const data = await response.json();\n  return data;\n};\n\nexport const concertSuccess = async (id) => {\n  const response = await fetch(`/checkout-session?session-id=${id}`, {\n    method: \"get\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n  if (!response.ok) {\n    console.log(response);\n    console.log(\"Concert Success: Error happened while fetching data\");\n    return null;\n  }\n  const data = await response.json();\n  return data;\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { getPriceDollars } from \"../components/Util\";\nimport Header from \"../components/Header\";\nimport \"../css/checkout.scss\";\nimport { config } from \"../components/mock_data\";\nimport { concertSetup } from \"../Services/concert\";\n\n//Concert Ticket Component\n/*\n  This component works with i18n to show messages according to language coonfiguration (lang).\n  The content of each message is located in public/locales/lang/translation.json\n*/\nconst MIN_TIXX = 1; //min number of tickets user can buy\nconst MAX_TIXX = 10; //max number of tickets user can buy\n\nconst Concert = () => {\n  const [tickets, setTickets] = useState(1); //number of tickets user want to buy\n  const [total, setTotal] = useState(\"$0\"); //total price to pay\n  const [data, setData] = useState({});\n  const t = useTranslation()[0];\n\n  const increaseTicketCount = () => {\n    if (tickets < MAX_TIXX) {\n      setTickets(tickets + 1);\n    }\n  };\n\n  const reduceTicketCount = () => {\n    if (tickets > MIN_TIXX) {\n      setTickets(tickets - 1);\n    }\n  };\n  //Get info to load page, config API route in package.json \"proxy\"\n  useEffect(() => {\n    const setup = async () => {\n      var result = await concertSetup();\n      if (result === null) {\n        //use static data\n        //comment this code to work with backend only\n        result = config;\n      }\n      setData(result);\n    };\n    setup();\n  }, []);\n  //Calculate total when number of tickets changes\n  useEffect(() => {\n    setTotal(getPriceDollars(tickets * data.basePrice, true));\n  }, [data, tickets]);\n\n  return (\n    <main className=\"main-checkout\">\n      <Header selected=\"concert\" />\n      <div className=\"sr-root\">\n        <div className=\"sr-checkout-main\">\n          <section className=\"concert-container\">\n            <div>\n              <div className=\"concert-img\">\n                <img src=\"/assets/img/concert.png\" alt=\"\" />\n              </div>\n              <h1 id=\"headline\">{t(\"headline\")}</h1>\n              <h2 id=\"date\">{t(\"date\")}</h2>\n              <h4 id=\"sublime\">{t(\"subline\")}</h4>\n            </div>\n\n            <div className=\"concert-tickets\">\n              <div className=\"concert-price\">\n                <h3>Standard Ticket</h3>\n                <p>{getPriceDollars(data.basePrice, true)}</p>\n              </div>\n              <div className=\"quantity-setter\">\n                <button\n                  disabled={tickets <= 1}\n                  className=\"decrement-btn\"\n                  id=\"subtract\"\n                  onClick={() => reduceTicketCount()}\n                >\n                  -\n                </button>\n                <input\n                  type=\"number\"\n                  id=\"quantity-input\"\n                  min=\"1\"\n                  max=\"10\"\n                  value={tickets}\n                  disabled\n                />\n                <button\n                  disabled={tickets >= 10}\n                  className=\"increment-btn\"\n                  id=\"add\"\n                  onClick={() => increaseTicketCount()}\n                >\n                  +\n                </button>\n              </div>\n            </div>\n\n            <p className=\"legal-text\">{t(\"sr-legal-text\")}</p>\n\n            <button className=\"button\" id=\"submit\">\n              {t(\"button.submit\", { total: total })}\n            </button>\n          </section>\n          <div id=\"error-message\"></div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Concert;\n","import React from \"react\";\n\nconst SignupComplete = ({ active, email, last4, customer_id }) => {\n  if (active) {\n    return (\n      <div className=\"lesson-complete hidden\">\n        <h3 id=\"signup-status\">\n          Woohoo!\n          {\"\\n\"}\n          They are going to call you the shredder\n        </h3>\n        <p>\n          We've created a customer account with an id of{\" \"}\n          <span id=\"customer-id\">{customer_id}</span> and saved the card ending\n          in <span id=\"last4\">{last4}</span>\n        </p>\n        <p>\n          Please check your email at <span id=\"customer_email\">{email}</span>{\" \"}\n          for a welcome letter.\n        </p>\n        <button onClick={() => window.location.reload(false)}>\n          Sign up again under a different email address\n        </button>\n      </div>\n    );\n  } else {\n    return \"\";\n  }\n};\n\nexport default SignupComplete;\n","import React from \"react\";\nimport SignupComplete from \"./SignupComplete\";\n\n//Registration Form Component, process user info for online session.\n//const textSingup = ;\nconst RegistrationForm = ({ selected, details }) => {\n  if (selected !== -1) {\n    return (\n      <div className={`lesson-form`}>\n        <div className={`lesson-desc`}>\n          <h3>Registration details</h3>\n          <div id=\"summary-table\" className=\"lesson-info\">\n            {details}\n          </div>\n          <div className=\"lesson-grid\">\n            <div className=\"lesson-inputs\">\n              <div className=\"lesson-input-box first\">\n                <input\n                  type=\"text\"\n                  id=\"name\"\n                  placeholder=\"Name\"\n                  autoComplete=\"cardholder\"\n                  className=\"sr-input\"\n                />\n              </div>\n              <div className=\"lesson-input-box middle\">\n                <input\n                  type=\"text\"\n                  id=\"email\"\n                  placeholder=\"Email\"\n                  autoComplete=\"cardholder\"\n                />\n              </div>\n              <div className=\"lesson-input-box last\">\n                <div className=\"lesson-card-element\"></div>\n              </div>\n            </div>\n            <div className=\"sr-field-error\" id=\"card-errors\" role=\"alert\"></div>\n            <div\n              className=\"sr-field-error\"\n              id=\"customer-exists-error\"\n              role=\"alert\"\n              hidden\n            >\n              A customer with the email address of{\" \"}\n              <span id=\"error_msg_customer_email\"></span> already exists. If\n              you'd like to update the card on file, please visit\n              <span id=\"account_link\"></span>.\n            </div>\n          </div>\n          <button id=\"submit\">\n            <div className=\"spinner hidden\" id=\"spinner\"></div>\n            <span id=\"button-text\">Request Lesson</span>\n          </button>\n          <div className=\"lesson-legal-info\">\n            Your card will not be charged. By registering, you hold a session\n            slot which we will confirm within 24 hrs.\n          </div>\n        </div>\n\n        <SignupComplete active={false} email=\"\" last4=\"\" customer_id=\"\" />\n      </div>\n    );\n  } else {\n    return \"\";\n  }\n};\nexport default RegistrationForm;\n","import React, { useState, useEffect } from \"react\";\nimport RegistrationForm from \"../components/RegistrationForm\";\nimport \"../css/lessons.scss\";\nimport Header from \"../components/Header\";\n\nconst months = [\n  \"Jan\",\n  \"Feb\",\n  \"Mar\",\n  \"Apr\",\n  \"May\",\n  \"Jun\",\n  \"Jul\",\n  \"Aug\",\n  \"Sept\",\n  \"Oct\",\n  \"Nov\",\n  \"Dec\",\n];\n\n//format session's date\nconst formatSession = (index, id, session, time) => {\n  let date = session.getDate();\n  if (date <= 9) {\n    date = \"0\" + date;\n  }\n  date = `${date} ${months[session.getMonth()]}`;\n  let title = `${date} ${time}`;\n  return { index, id, title, date, time, selected: \"\" };\n};\n\n//Lessons main component\nconst Lessons = () => {\n  const [sessions, setSessions] = useState([]); //info about available sessions\n  const [selected, setSelected] = useState(-1); //index of selected session\n  const [details, setDetails] = useState(\"\"); //details about selected session\n\n  //toggle selected session\n  const toggleItem = (index) => {\n    let items = sessions;\n    if (selected !== -1) {\n      items[selected].selected = \"\";\n    }\n    items[index].selected = \"selected\";\n    setSelected(index);\n    setSessions(items);\n    setDetails(\n      `You have requested a lesson for ${items[index].title} \\n Please complete this form to reserve your lesson.`\n    );\n  };\n  //Load sessions info.\n  useEffect(() => {\n    let items = [];\n    let session = new Date();\n\n    session.setDate(session.getDate() + 9);\n    items.push(formatSession(0, \"first\", session, \"3:00 p.m.\"));\n\n    session.setDate(session.getDate() + 5);\n    items.push(formatSession(1, \"second\", session, \"4:00 p.m.\"));\n\n    session.setDate(session.getDate() + 7);\n    items.push(formatSession(2, \"third\", session, \"5:00 p.m.\"));\n    setSessions((prev) => [...prev, ...items]);\n  }, []);\n\n  return (\n    <main className=\"main-lessons\">\n      <Header selected=\"lessons\" />\n      {\n        //Component to process user info for registration.\n      }\n      <RegistrationForm selected={selected} details={details} />\n      <div className=\"lesson-title\" id=\"title\">\n        <h2>Guitar lessons</h2>\n      </div>\n      <div className=\"lesson-instruction\">\n        Choose from one of our available lessons to get started.\n      </div>\n      <div className=\"lessons-container\">\n        <div className=\"lessons-img\">\n          <img src=\"/assets/img/lessons.png\" alt=\"\" />\n        </div>\n        <div id=\"sr-items\" className=\"lessons-cards\">\n          {sessions.map((session) => (\n            <div\n              className={`lesson-card ${session.selected}`}\n              key={session.index}\n            >\n              <div className=\"lesson-info\">\n                <h2 className=\"lesson-date\">{session.date}</h2>\n                <h4 className=\"lesson-time\">{session.time}</h4>\n              </div>\n              <button\n                className=\"lesson-book\"\n                id={session.id}\n                onClick={() => toggleItem(session.index)}\n              >\n                Book now!\n              </button>\n            </div>\n          ))}\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Lessons;\n","import React, { useState, useEffect } from \"react\";\nimport \"../css/checkout.scss\";\nimport { Link } from \"@reach/router\";\nimport { concertSuccess } from \"../Services/concert\";\nimport Header from \"../components/Header\";\n\n//Component to show success after buying concert tickets\nconst ConcertSuccess = (props) => {\n  const { id } = props;\n  const [data, setData] = useState(props);\n\n  //Get info to load page, config API route in package.json \"proxy\"\n  useEffect(() => {\n    const setup = async () => {\n      const result = await concertSuccess(id);\n      console.log(result);\n      if (result !== null) {\n        setData(result);\n      }\n    };\n    setup();\n  }, [id]);\n\n  return (\n    <main className=\"main-checkout\">\n      <Header />\n      <div className=\"checkout-root\">\n        <div className=\"checkout-success\">\n          <header className=\"sr-header\"></header>\n          <div className=\"payment-summary completed-view\">\n            <img src=\"/assets/img/success.svg\" alt=\"\" />\n            <h1 id=\"headline\">Your payment succeeded</h1>\n          </div>\n          <div className=\"sr-section completed-view\">\n            <div className=\"eco-callout\">\n              {\n                //your information will be display here\n              }\n              <pre id=\"payment-info\">{JSON.stringify(data, null, 2)}</pre>\n            </div>\n            <Link to=\"/concert\">\n              <button>Return to ticket purchase</button>\n            </Link>\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default ConcertSuccess;\n","export const accountUpdate = async (id) => {\n  const response = fetch(`/account-update/${id}`, {\n    method: \"get\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n  if (!response.ok) {\n    console.log(response);\n    console.log(\"Account Update: Error happend while fetch data\");\n    return null;\n  }\n  const data = await response.json();\n  return data;\n};\n","import React from \"react\";\nimport { Link } from \"@reach/router\";\n\nconst UpdateCustomer = () => {\n  return (\n    <div className=\"lesson-form\">\n      <div className=\"lesson-desc\">\n        <h3>Update your Payment details</h3>\n        <div className=\"lesson-info\">\n          Fill out the form below if you'd like to us to use a new card.\n        </div>\n        <div className=\"lesson-grid\">\n          <div className=\"lesson-inputs\">\n            <div className=\"lesson-input-box\">\n              <input\n                type=\"text\"\n                id=\"name\"\n                placeholder=\"Name\"\n                autoComplete=\"cardholder\"\n                className=\"sr-input\"\n              />\n            </div>\n            <div className=\"lesson-input-box\">\n              <input\n                type=\"text\"\n                id=\"email\"\n                placeholder=\"Email\"\n                autoComplete=\"cardholder\"\n              />\n            </div>\n            <div className=\"lesson-input-box\">\n              <div className=\"lesson-card-element\"></div>\n            </div>\n          </div>\n          <div className=\"sr-field-error\" id=\"card-errors\" role=\"alert\"></div>\n          <div\n            className=\"sr-field-error\"\n            id=\"customer-exists-error\"\n            role=\"alert\"\n            hidden\n          ></div>\n        </div>\n        <button id=\"submit\" disabled>\n          <div className=\"spinner hidden\" id=\"spinner\"></div>\n          <span id=\"button-text\">Save</span>\n        </button>\n        <div className=\"lesson-legal-info\">\n          Your new card will be charged when you book your next session.\n        </div>\n      </div>\n\n      <div className=\"sr-section hidden completed-view\">\n        <h3 id=\"signup-status\">Payment Information updated </h3>\n        <Link to=\"/lessons\">\n          <button>Sign up for lessons under a different email address</button>\n        </Link>\n      </div>\n    </div>\n  );\n};\nexport default UpdateCustomer;\n","import React, { useEffect, useState } from \"react\";\nimport Header from \"../components/Header\";\nimport \"../css/lessons.scss\";\nimport { accountUpdate } from \"../Services/account\";\nimport UpdateCustomer from \"../components/UpdateCustomer\";\n\n//Component responsable to update user's info.\nconst AccountUpdate = ({ id }) => {\n  const [data, setData] = useState({});\n\n  //Get info to load page, User payment information, config API route in package.json \"proxy\"\n  useEffect(() => {\n    const setup = async () => {\n      const result = accountUpdate(id);\n      if (result !== null) {\n        setData(result);\n      }\n    };\n    setup();\n  }, [id]);\n\n  return (\n    <main className=\"main-lessons\">\n      <Header />\n      <div className=\"eco-items\" id=\"account-information\">\n        {\n          //User's info shoul be display here\n        }\n        <h3>Account Details</h3>\n        <h4>Current Account information</h4>\n        <h5>We have the following card information on file for you: </h5>\n        <p>\n          Billing Email:&nbsp;&nbsp;<span id=\"billing-email\"></span>\n        </p>\n        <p>\n          Card Exp Month:&nbsp;&nbsp;<span id=\"card-exp-month\"></span>\n        </p>\n        <p>\n          Card Exp Year:&nbsp;&nbsp;<span id=\"card-exp-year\"></span>\n        </p>\n        <p>\n          Card last 4:&nbsp;&nbsp;<span id=\"card-last4\"></span>\n        </p>\n      </div>\n      <UpdateCustomer />\n    </main>\n  );\n};\n\nexport default AccountUpdate;\n","import React, { Suspense } from \"react\";\nimport { Router } from \"@reach/router\";\n\nimport Home from \"../pages/Home\";\nimport Videos from \"../pages/Videos\";\nimport Concert from \"../pages/Concert\";\nimport Lessons from \"../pages/Lessons\";\nimport ConcertSuccess from \"../pages/ConcertSuccess\";\nimport AccountUpdate from \"../pages/AccountUpdate\";\n\nimport \"../css/normalize.scss\";\nimport \"../css/eco-nav.scss\";\n\nconst App = () => {\n  return (\n    <React.StrictMode>\n      <Suspense fallback=\"loading\">\n        {\n          // Routes for principal UI sections.\n          // Concert Tickets Challenge: /concert\n          // Online Video Purchase: /video\n          // Online Lessons: /lessons\n        }\n        <Router>\n          <Home path=\"/\" />\n          <Videos path=\"/videos\" />\n          <Concert path=\"/concert\" />\n          <ConcertSuccess path=\"/concert-success/:id\" />\n          <Lessons path=\"/lessons\" />\n          <AccountUpdate path=\"/account-update/:id\" />\n        </Router>\n      </Suspense>\n    </React.StrictMode>\n  );\n};\n\nexport default App;\n","import i18n from \"i18next\";\nimport Backend from \"i18next-xhr-backend\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport { initReactI18next } from \"react-i18next\";\n\ni18n\n  // load translation using xhr -> see /public/locales\n  // learn more: https://github.com/i18next/i18next-xhr-backend\n  .use(Backend)\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  .use(LanguageDetector)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    fallbackLng: \"en\",\n    debug: false,\n\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    },\n  });\n\nexport default i18n;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from \"react\";\n\n//Capture error while loading components\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false,\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.log(error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h1>Something went wrong ...</h1>;\n    }\n    return this.props.children;\n  }\n}\nexport default ErrorBoundary;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./i18n\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport ErrorBoundary from \"./components/ErrorBoundary\";\n\nReactDOM.render(\n  <ErrorBoundary>\n    {\" \"}\n    <App />\n  </ErrorBoundary>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","var items_data = [\n  {\n    itemId: \"piano\",\n    desc:\n      \"<strong>Play by ear.</strong> Ever wish you could just hear a song and then play it for your friends? This 20-lecture course shows you how to take what you hear and play it on the piano.\",\n    price: 2500,\n    title: \"Mock Piano\",\n    img: \"./assets/img/geert-pieters-8QrPJ3Kfie4-unsplash.jpg\",\n  },\n  {\n    itemId: \"guitar\",\n    desc:\n      \"<strong>Intro to Rockabilly.</strong> Early rock and roll songs are a fun way to get an introduction to the guitar. By the end of this 15-lecture course you'll be wowing your friends.\",\n    price: 1500,\n    title: \"Mock Guitar\",\n    img: \"./assets/img/freestocks-org-Fx5rrxSaUtI-unsplash.jpg\",\n  },\n  {\n    itemId: \"ukelele\",\n    desc:\n      \"<strong>Kids Song for Ukelele.</strong> You'll learn 15 classic children's songs. Perfect for the new parent or early education teacher. Lessons assume no prior musical knowledge.\",\n    price: 1000,\n    title: \"Mock Ukelele\",\n    img: \"./assets/img/rushina-morrison-fEdo2qJ647U-unsplash.jpg\",\n  },\n  {\n    itemId: \"drums\",\n    desc:\n      \"<strong>Start Your Journey.</strong> From easy fills to advanced topics like metric modulation, these 15 lessons will help take your drumming to the next level.\",\n    price: 3000,\n    title: \"Mock Drum\",\n    img: \"./assets/img/drums2.jpeg\",\n  },\n  {\n    itemId: \"banjo\",\n    desc:\n      \"<strong>Intro to Bluegrass Banjo.</strong> Get started with this class style made famous by the iconic Earl Scruggs. 15 lessons, 12 songs perfect for back porch jams \",\n    price: 3500,\n    title: \"Mock Banjo\",\n    img: \"./assets/img/banjo.jpeg\",\n  },\n  {\n    itemId: \"g2\",\n    desc:\n      \"<strong>Theorize this.</strong> For the budding songwriter and composer, 5 lessons to introduce you to common chord structures and haromonies\",\n    price: 1500,\n    title: \"Mock Music Theory\",\n    img: \"./assets/img/freestocks-org-Fx5rrxSaUtI-unsplash.jpg\",\n  },\n];\n\nvar config = {\n  video_discount_factor: \".2\",\n  video_min_items_for_discount: 2,\n  checkout_base_price: 2000,\n  basePrice: 2000,\n  checkout_currency: \"usd\",\n  checkout_event_name: \"Spring Academy Concert\",\n  checkout_image:\n    \"https://d37ugbyn3rpeym.cloudfront.net/partner-program/edu/kidvert.jpeg\",\n};\n\nexports.items_data = items_data;\nexports.config = config;\n","var getPriceDollars = (price, decimal = false, recurringBy = undefined) => {\n  if (decimal) {\n    price = Math.round(price / 100.0).toFixed(2);\n  } else {\n    price = Math.round(price / 100.0);\n  }\n  var pricePart = \"$\" + price;\n  if (recurringBy === undefined) {\n    return pricePart;\n  } else {\n    return pricePart + \"/\" + recurringBy;\n  }\n};\n\nvar capitalize = (itemName) => {\n  return itemName.charAt(0).toUpperCase() + itemName.slice(1);\n};\n\nexports.getPriceDollars = getPriceDollars;\nexports.capitalize = capitalize;\n"],"sourceRoot":""}